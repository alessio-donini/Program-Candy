@page
@model Candy.Pages.ProvaModel
@{
    ViewData["Title"] = "Pagina Prodotto";
}
@* su @page -> "{id}" per vsualizzare sul link l'id del parametro, questo inoltre sarà necessario per visualizzare la
    pagina

    <h1 class="display-4">Pagina del prodotto</h1>
    <p>valore passato per parametro alla pagina: @Model.id</p>
    <p>Vediamo se funziona: @Model.ProductData()</p> *@
<div class="text-center">
    @{ Program.UpdateList(); Model.GetProductData(); }
    <div class="row">
        <div class="col-12 col-lg-6 caramella">
            <img class="img-fluid prodottoimg" src="~/images/@Model.imgProdotto" />
        </div>
        <div class="col-12 col-lg-6">
            <div class="row d-flex justify-content-center">
                <h1 class="nomeProdotto">@Model.idProdotto</h1>
            </div>
            <div class="row d-flex justify-content-center">
                <h4 class="disponibilitaProdotto">Disponibilità: @Model.quant</h4>
            </div>
            <div class="row d-flex justify-content-center">
                <h3 class="prezzoProdotto">@Model.prez€</h3>
            </div>
            <div class="row sezioneAcquisto">
                <div class="col-4 d-flex justify-content-lg-start">
                    <button class="btn btnQuant btnMeno">-</button>
                    <div class="textQuant">Quantità: 
                        <div class="prodquant">@Model.prova</div>
                    </div>
                    <button class="btn btnQuant btnPiu">+</button>
                </div>
                <div class="btnCompra">
                    <button>Compra</button>
                </div>
                <div class=""></div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
    function RazorFunction() {
        $(".prodquant").html('@Model.aumenta()');
    }

    </script>
} 